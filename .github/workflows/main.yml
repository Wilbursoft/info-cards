name: Automated Test On Push
on: [push]

jobs:
  unit-test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout WordPress plugin code 
        uses: actions/checkout@v2
        with:
          path: wp-info-cards

      - name: Checkout wp-plugin-test-env
        uses: actions/checkout@v2
        with:
          repository: Wilbursoft/wp-plugin-test-env
          path: wp-plugin-test-env

      - name: Run tests
        run: |
          echo creating docker image for test environment
          cd ./wp-plugin-test-env
          ./bin/make-wp-docker.sh ../wp-info-cards
          
          echo spinning up test environment 
          ./bin/bring-up-test-env.sh
          cd ..

          echo Run the tests
          docker exec docker-test-env_wordpress_1 /var/www/html/setup-run-unittests.sh 
          exit $?
         
          
      - name: Package 
        if: success()
        run: |
          echo packaging 
          zip -r ./info-cards.zip .
      - name: Create Release
        if: success()
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mytagname # ${{ github.ref }}
          release_name: Release # ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: success()
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./wp-info-cards.zip
          asset_name: wp-info-cards.zip
          asset_content_type: application/zip
          